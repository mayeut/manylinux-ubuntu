name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build_image:
    name: Build ${{ matrix.policy }} ${{ matrix.platform }} image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        policy:
          - manylinux_2_31
          - manylinux_2_35
        platform:
          - amd64
          - arm64
          - s390x
          - ppc64le
          - arm
          - riscv64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          load: true
          push: false
          tags: ${{ matrix.policy }}:latest
          build-args: POLICY=${{ matrix.policy }}
          cache-from: type=gha,scope=${{ matrix.policy }}_${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.policy }}_${{ matrix.platform }}

      - name: Test image
        run: docker run --rm --platform linux/${{ matrix.platform }} -e "ADJUST_CPYTHON_COUNT=- 2" -v $(pwd)/tests:/tests:ro ${{ matrix.policy }}:latest /tests/run_tests.sh

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image by digest
        if: github.event_name == 'push'
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          push: true
          build-args: POLICY=${{ matrix.policy }}
          cache-from: type=gha,scope=${{ matrix.policy }}_${{ matrix.platform }}
          outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/${{ matrix.policy }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        if: github.event_name == 'push'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.policy }}_${{ matrix.platform }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge ${{ matrix.policy }} image
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs:
      - build_image
    strategy:
      fail-fast: false
      matrix:
        policy:
          - manylinux_2_31
          - manylinux_2_35
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.policy }}*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get tag name
        id: tag
        run: |
          COMMIT_DATE=$(git show -s --format=%cd --date=short ${{ github.sha }})
          # Dependabot does not work with the BUILD_ID format
          # Use a version like tag
          if $(git rev-parse --is-shallow-repository); then
            git fetch --unshallow
          fi
          BUILD_NUMBER=$(git rev-list --since=${COMMIT_DATE}T00:00:00Z --first-parent --count ${{ github.sha }})
          BUILD_ID2=${COMMIT_DATE//-/.}-${BUILD_NUMBER}
          echo "tag=${BUILD_ID2}" >> "$GITHUB_OUTPUT"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.policy }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.tag.outputs.tag }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository_owner }}/${{ matrix.policy }}@sha256:%s ' *)
